---
### Livingroom ###

light:
  - platform: switch
    name: Livingroom Light 1
    entity_id: switch.house_livingroom_light_1_l1

  - platform: switch
    name: Livingroom Light 2
    entity_id: switch.house_livingroom_light_1_l2

  - platform: group
    name: "Livingroom bulbs"
    unique_id: livingroom_bulbs
    entities:
      - light.house_livingroom_bulb_1
      - light.house_livingroom_bulb_2

  - platform: group
    name: "Livingroom All Lights"
    unique_id: livingroom_all_lights
    entities:
      - light.livingroom_light_1
      - light.livingroom_light_2

template:
  - sensor:
      - unique_id: "livingroom_alice_state"
        name: "Livingroom Alice state"
        state: "{{ state_attr('media_player.livingroom_yandex_station', 'alice_state') }}"

      - unique_id: sensor.livingroom_tion_target_fan_speed
        name: "Livingroom Tion - Target fan speed"
        icon: mdi:fan-auto
        state: >
          {% from "tion.jinja" import calculate_tion_fan_speed %}
          {{ calculate_tion_fan_speed('sensor.livingroom_co2', 700, 750, 800, 900) | trim }}

automation:
  - id: livingroom_vacuum_start_cleaning
    alias: "Livingroom Vacuum - Start cleaning when no one is home"

    trigger:
      - platform: time
        at: input_datetime.vacuum_cleaning_time

    condition:
      - condition: state
        entity_id: binary_sensor.house_occupancy
        state: "off"

      - condition: state
        entity_id: vacuum.dreamebot_z10_pro
        state: "docked"

    action:
      - service: vacuum.start
        entity_id: vacuum.dreamebot_z10_pro

      - service: script.automation_notification
        data:
          message: "ðŸ§¹ Vacuum: Started cleaning as no one is home."

  - id: livingroom_vacuum_stop_cleaning
    alias: "Livingroom Vacuum - Stop cleaning when someone comes home"

    trigger:
      - platform: state
        entity_id: binary_sensor.house_occupancy
        to: "on"

    condition:
      - condition: state
        entity_id: vacuum.dreamebot_z10_pro
        state: "cleaning"

    action:
      - service: vacuum.return_to_base
        entity_id: vacuum.dreamebot_z10_pro

      - service: script.automation_notification
        data:
          message: "ðŸ§¹ Vacuum: Stopped cleaning as someone came home."

  - id: livingroom_vacuum_finished
    alias: "Livingroom Vacuum - Finished cleaning notification"

    trigger:
      - platform: state
        entity_id: vacuum.dreamebot_z10_pro
        to: "docked"

    action:
      - service: script.automation_notification
        data:
          message: "ðŸ§¹ Vacuum: Finished cleaning with state '{{ states('vacuum.dreamebot_z10_pro') }}'"

  - id: livingroom_lights_on_off_on_movie
    alias: Livingroom Lights - Turn on off lights on Movie

    use_blueprint:
      path: Blackshome/sensor-light-add-on.yaml
      input:
        trigger_entities:
          - media_player.gostinaia

        trigger_on_state:
          - playing
        trigger_off_state:
          - idle
          - standby
          - "off"

        include_sun: sun_enabled
        include_start_turn_off: enable_start_turn_off
        include_end_turn_on: enable_end_turn_on

        off_light_switch:
          entity_id:
            - light.livingroom_all_lights
            - light.kitchen_light
            - light.diningroom_light
            - light.hall_light
            - light.corridor_light

        light_switch:
          entity_id:

        end_light_switch:
          entity_id: light.livingroom_light_1

  - id: livingroom_tion
    alias: "Livingroom - Tion Climate Control"
    use_blueprint:
      path: timurvafin/tion.yaml
      input:
        house_occupancy: binary_sensor.house_occupancy
        climate_device: climate.tion_livingroom
        fan_speed_sensor: sensor.livingroom_tion_target_fan_speed
        hvac_mode_sensor: sensor.tion_target_hvac_mode
        temperature_sensor: sensor.tion_target_temperature
